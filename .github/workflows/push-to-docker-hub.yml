# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Push to Docker Hub

on:
  pull_request:
    branches:
      - main
    types:
      - closed # PR이 닫히면 실행
  workflow_dispatch: # 수동 실행을 위한 설정

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true # PR이 Merge되었을 때만 실행

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Permissions for Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle BootBuildImage
        run: ./gradlew clean bootBuildImage

      - name: Get the version
        run: echo "VERSION=$(./gradlew properties -q | grep '^version:' | awk '{print $2}')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: Push to GitHub Container Registry
        run: |
          docker tag docker.io/library/instagram:${{ env.VERSION }} ${{ vars.DOCKERHUB_USERNAME }}/instagram-clone:latest
          docker tag docker.io/library/instagram:${{ env.VERSION }} ${{ vars.DOCKERHUB_USERNAME }}/instagram-clone:${{ env.VERSION }}
          docker push ${{ vars.DOCKERHUB_USERNAME }}/instagram-clone:${{ env.GIT_BRANCH_NAME }}-latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/instagram-clone:${{ env.GIT_BRANCH_NAME }}-${{ env.VERSION }}
